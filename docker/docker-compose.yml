# networks:
#   timetracker_network:
#     driver: bridge

services:
  timetracker.api:
    image: timetracker.api
    environment:
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=TimeTrackerDb;User Id=sa;Password=YourStrongPassword123!;TrustServerCertificate=True;"
      RabbitMq__Host: "rabbitmq"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
    build:
      context: ..
      dockerfile: src/TimeTracker.Api/Dockerfile
    ports:
      - "8080:8080"
    # networks:
    #   - timetracker_network

  timetracker.db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "YourStrongPassword123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sql_data:/var/opt/mssql
    # networks:
    #   - timetracker_network

  timetracker.mongo:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    # networks:
    #   - timetracker_network

  users.api:
    image: users.api
    environment:
      MongoDb__ConnectionString: "mongodb://mongodb:27017"
      MongoDb__DatabaseName: "UsersDb"
      RabbitMq__Host: "rabbitmq"
      RabbitMq__Username: "guest"
      RabbitMq__Password: "guest"
    build:
      context: ..
      dockerfile: src/Users.Api/Dockerfile
    ports:
      - "8081:8080"
    # networks:
    #   - timetracker_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # networks:
    #   - timetracker_network
  
  # frontend:
  #   build:
  #     context: ..
  #     dockerfile: src/my-app/Dockerfile
  #   ports:
  #     - "4200:80"
  #   networks:
  #     - timetracker_network
        
volumes:
  sql_data:
  mongo_data: